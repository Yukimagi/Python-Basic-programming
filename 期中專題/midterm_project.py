import math
import datetime
import time
import os#用於清除頁面等美觀
a='''⠀
　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　
 ⠀
  人          ##   ##  #######  ####       ####    #####   ##   ##  #######               人
  人          ##   ##   ##   #   ##       ##  ##  ##   ##  ### ###   ##   #               人
  人          ##   ##   ## #     ##      ##       ##   ##  #######   ## #                 人
  人          ## # ##   ####     ##      ##       ##   ##  #######   ####                 人
  人          #######   ## #     ##   #  ##       ##   ##  ## # ##   ## #                 人
  人          ### ###   ##   #   ##  ##   ##  ##  ##   ##  ##   ##   ##   #               人
  人          ##   ##  #######  #######    ####    #####   ##   ##  #######               人

　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　                                                      
                          =*=                         
@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@%#%@@@%#%@@@@%#%@#%@@@##@@@%*:  -*#@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+.   =@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%: -= .+@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+  *%= .*@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%: -%@%- .#@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+ .*@@@%: .#@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*%@@@@@@@@@@@@@@@@@@@#. =%@@@@#: :%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*. =@@@@@@@@@@@@@@@@@@@- .#@@@@@@#==@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.  :%@@@@@@@@@@@@@@@@@*. =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%:   .*@@@@@@@@@@@@@@@@%- .%@@@@@%#%@@@@@%%%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%- :+. +@@@@@#=*%@@@@@@@*. +@@@@*-...:+%*:...:*@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@= .+%: -%@@@#.  #@@@@@@%- :%@@@+.      .      .+@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+. =@@- :%@@#:   =@@@@@@*  *@@@@:               :%@@@@@@@@@@@@@@
@@@@@@@@@@@@@@#+++++++++++++++. -%@@+ .*@#: :: :%@@@@%: :%@@@@-               -%@@@@@@@@@@@@@@
@@@@@@@@@@@@@#:................:%@@@*. =#: :#+ .*@@@@+ .*@@@@@%-             -%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%%%%%%%%%%%%#%@@@@@%: :: :#@#. +@@@%: -%@@@@@@@*:         :*@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-   :#@@%: :%@@= .*@@@@@@@@@%+:     .+%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*  :#@@@@= .#@#. -%@@@@@@@@@@@%+. .=%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%==#@@@@@*. +@= .#@@@@@@@@@@@@@@%+#@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%: -#. =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@= .: .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.   =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%.  :%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=  +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#=+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

(SDGS第三項：確保及促進各年齡層健康生活與福祉)   
                          　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
你好，歡迎光臨日日香~
  '''

def start():
    print(a)

b='''
丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　

人   ##   ##     ##     ######   ######   ##  ##            ##   ##  #######    ##     ####          人
人   ##   ##    ####     ##  ##   ##  ##  ##  ##            ### ###   ##   #   ####     ##           人
人   ##   ##   ##  ##    ##  ##   ##  ##  ##  ##            #######   ## #    ##  ##    ##           人
人   ######    ##  ##    #####    #####    ####             #######   ####    ##  ##    ##           人
人   ##  ##    ######    ##       ##        ##              ## # ##   ## #    ######    ##   #       人
人   ##  ##    ##  ##    ##       ##        ##              ##   ##   ##   #  ##  ##    ##  ##       人
人   ###  ##    ##  ##   ####     ####      ####             ##   ##  #######  ##  ##   #######      人
人                                                                                                   人

　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　 
                                                                               
                                                                               
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@#..#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:=%@@@@@@#..#@@@@@@%-:#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#. -%@@@@@#..#@@@@@%- :#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*. =%@@@@#.:%@@@@%- .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..#@@@@@%%@@@@@*..#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@%#%#*=-:::::=*%%#%@@@@@@@@#%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%:.:*%@@@@@%*:           .:*%@@@@@%+:.:%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@#-. .-#@@*:                :#@@#-. .=#@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@%*-:*@+.        ++        .+@+:-*%@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+       -=.#*.=-      .+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.     :*%+.#*.*@*.     .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@=     .#%-  :.  =%*.     +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%=------*@-     -@+        *%-     =@*------=@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%=::::::+@:     -@+        *%-     =@*::::::=%@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@=     .#%-      -%#.     +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@#.     :#%*-::-*%#.     .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=      .-*%%%#*-       +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@%*-:*%=        ...         =@+:-*%@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@#=. .-#@@+.                .*@@#-. .=#@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%: :+%@@@@@%=.            .=%@@@@@%+: :%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@%#%*=-......-=#%#%@@@@@@@%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..#@@@@%%#%@@@@*..*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#. -%@@@@%::%@@@@%- .#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#: -%@@@@@#..#@@@@@%- :#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:-%@@@@@@#..#@@@@@@%-:*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@#..#@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%--%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

(SDGS第七項:確保所有的人都可取得負擔得起、可靠、永續及現代的能源)   

點餐完畢，祝您用餐愉快。
'''

def after_order():
#放在點完餐之後
    print(b)

#放在後臺管理系統前
c='''
　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　   


人       ##   ##    ##     ##   ##    ##       ####   #######  ##   ##  #######  ##   ##  ######   人
人       ### ###   ####    ###  ##   ####     ##  ##   ##   #  ### ###   ##   #  ###  ##  # ## #   人
人       #######  ##  ##   #### ##  ##  ##   ##        ## #    #######   ## #    #### ##    ##     人
人       #######  ##  ##   ## ####  ##  ##   ##        ####    #######   ####    ## ####    ##     人
人       ## # ##  ######   ##  ###  ######   ##  ###   ## #    ## # ##   ## #    ##  ###    ##     人
人       ##   ##  ##  ##   ##   ##  ##  ##    ##  ##   ##   #  ##   ##   ##   #  ##   ##    ##     人
人       ##   ##  ##  ##   ##   ##  ##  ##     #####  #######  ##   ##  #######  ##   ##   ####    人

　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　   
                                                                       
                                                                       
@@@@@@@@@@@@@@@@@@@@@@@%#%%%%%%#%@%@%#%#-   :*@@@%#%@@@@%#@@@@@@@@%#@@@@@@@@@##@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%=.      -#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:         .+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%=.............:#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@*:%@@@@@+...............:%@@@@%-=%@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@#- .#@@@@@=               .%@@@@%: :*@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%+.  .#@@@@@=               .%@@@@%.   -#@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@*:    .#@@@@@#****************@@@@@%.    .+%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@%=      .#@@@@@@@@@@@@@@@@@@@@@@@@@@@%.      :%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@#-     .#@@@@@@@@@@@@@@@@@@@@@@@@@@@%.     :*@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@*.   .#@@@@@+:::::::::::::::-%@@@@%.   .+%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%=. .#@@@@@=               :%@@@@%.  -#@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@#-.#@@@@@=               .%@@@@%.:*@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@#%@@@@@#+++++++++++++++*@@@@@@*%@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%===============#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#-           :*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:       .+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%=.    -#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#- :*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
(SDGS第十項:減少國內及國家間的不平等)                     
                                                                       
歡迎使用後台管理系統　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
'''
def back_pic():
    print(c)

def ontime():
    #放在員工簽到以後
    d='''
    　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　

    人              #####   ##   ##           ######    ####    ##   ##  #######                      人
    人              ##   ##  ###  ##           # ## #     ##     ### ###   ##   #                     人
    人              ##   ##  #### ##             ##       ##     #######   ## #                       人
    人              ##   ##  ## ####             ##       ##     #######   ####                       人
    人              ##   ##  ##  ###             ##       ##     ## # ##   ## #                       人
    人              ##   ##  ##   ##             ##       ##     ##   ##   ##   #                     人
    人               #####   ##   ##            ####     ####    ##   ##  #######                     人

    　丿人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人人　   
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*+=-::.:::.::-=+#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@#+-.:=+#%%@@@@@@@%#*+-::=*%@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@#=.:+#@@@@@@@@@@@@@@@@@@@@%*=.:+%@@@@@@#=-=+%@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@*::+%@@@@@@@@@@@@@@@@@@@@@@@@@@@#=.#@@@*:      +@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@*::#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.        .@@@@@@@@@@
    @@@@@@@@@@@@@@@@%-:*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:          -@@@@@@@@@@
    @@@@@@@@@@@@@@@*.=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:          .+@@@@@@@@@@@
    @@@@@@@@@@@@@@+.*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:          :*@@@@@@@@@@@@@
    @@@@@@@@@@@@@=.#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%=          :*@@@@@@@@@@@@@@@
    @@@@@@@@@@@@+ #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.         .*@@#%@@@@@@@@@@@@@
    @@@@@@@@@@@% +@@@@%+==*%@@@@@@@@@@@@@@@@@@@@@@%-         .+@@@@::@@@@@@@@@@@@@
    @@@@@@@@@@@::@@@@+      *@@@@@@@@@@@@@@@@@@@@*          =@@@@@@# *@@@@@@@@@@@@
    @@@@@@@@@@# *@@@%        +@@@@@@@@@@@@@@@@@%-         :%@@@@@@@@-:@@@@@@@@@@@@
    @@@@@@@@@@=.@@@@@.        +@@@@@@@@@@@@@@@#.         +@@@@@@@@@@# #@@@@@@@@@@@
    @@@@@@@@@@:-@@@@@%.        +@@@@@@@@@@@@@*         :%@@@@@@@@@@@@ +@@@@@@@@@@@
    @@@@@@@@@@ =@@@@@@%.        =@@@@@@@@@@@=         +@@@@@@@@@@@@@@.=@@@@@@@@@@@
    @@@@@@@@@@ =@@@@@@@%:        =@@@@@@@@@-        .#@@@@@@@@@@@@@@@.=@@@@@@@@@@@
    @@@@@@@@@@.=@@@@@@@@%:        =@@@@@@%:        :%@@@@@@@@@@@@@@@@ =@@@@@@@@@@@
    @@@@@@@@@@-:@@@@@@@@@%:        =@@@@%:        -@@@@@@@@@@@@@@@@@% *@@@@@@@@@@@
    @@@@@@@@@@* %@@@@@@@@@%:        -@@%:        =@@@@@@@@@@@@@@@@@@+ @@@@@@@@@@@@
    @@@@@@@@@@@.=@@@@@@@@@@@:        -%:        +@@@@@@@@@@@@@@@@@@@.=@@@@@@@@@@@@
    @@@@@@@@@@@* #@@@@@@@@@@@:        .        +@@@@@@@@@@@@@@@@@@@=.%@@@@@@@@@@@@
    @@@@@@@@@@@@-:@@@@@@@@@@@@-               =@@@@@@@@@@@@@@@@@@@# *@@@@@@@@@@@@@
    @@@@@@@@@@@@%:-@@@@@@@@@@@@-             -@@@@@@@@@@@@@@@@@@@%.=@@@@@@@@@@@@@@
    @@@@@@@@@@@@@%:-@@@@@@@@@@@@-           :@@@@@@@@@@@@@@@@@@@#.=@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@%::%@@@@@@@@@@@-         .%@@@@@@@@@@@@@@@@@@* +@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@+.+@@@@@@@@@@@+.      :%@@@@@@@@@@@@@@@@@%-.#@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@%-.*@@@@@@@@@@%*===+%@@@@@@@@@@@@@@@@@%=.=@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@#::+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%=.=%@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@#=.-*%@@@@@@@@@@@@@@@@@@@@@@@%+:.+%@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@#=.:=*%@@@@@@@@@@@@@@@#+-::+#@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@%*=-.::===+++==-:::-+#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%########%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    已簽到，祝您有愉快的一天。　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　

    '''
    print(d)

start()
time.sleep(1)
os.system("cls")
print('以下是一個訂餐訂位系統請依照指示執行!\n')
print('------------------------------------\n')
#使用者輸入相關資訊
print('welcome 日日香~\n')
name=input('請問您的大名:\n')
print('歡迎您~'+name+'\n')
people_num=int(input('請問'+name+'會有幾位用餐呢?\n'))
test=True
print('-----------------------------------\n')
time.sleep(1)
os.system("cls")
print('-----------------------------------\n')
check=int(input('請問您需要進入使用者健康飲食生活測試嗎\n(要(1)/不要(0))?\n'))
print('------------------------------------\n')
user={}
user_kcal={}
#使用def定義飲食建議功能
def personal_data(i):
    #建tuple關於個人資料建立(name,birthday,date)
    
    print('請輸入第'+str(i+1)+'位的:姓名、生日')
    n=input('姓名: ')
    b=input('生日:yyyy/mm/dd(請依照此格式) ')
    key_t=(n,b)

    #詢問使用者各項身體數值
    print('請輸入您的年紀、身高、體重、工作狀況')
    age=int(input('您的年紀是:'))
    height=float(input('您的身高(cm)是:'))
    weight=float(input('您的體重(kg)是:'))
    work=int(input('您的工作量是(輕度工作(0)/中度工作(1)/重度工作(2)):'))
    bmi=(weight)/(((height)/100)**2)

    #將數據儲存到list
    value=[age,height,weight,work,bmi]

    #儲存到user{}
    user[key_t]=value
if(check==1):
    time.sleep(1)
    os.system("cls") 
    print('------------------------------------\n')
    print('本系統可以提供您:\n')
    print('(1)輸入自身身體數值，提供餐廳飲食建議')
    print('(2)建議食用蛋白質與熱量建議')
    print('(3)每日三餐健康搭配(隨機)建議')
    test=int(input('請問需要測試嗎(要(1)/不要(0))?\n'))
    print('------------------------------------\n')
    time.sleep(1)
    os.system("cls")
    p_num=1
    for i in range(people_num):
        personal_data(i)
    def diet_recommand():
        print('------------------------------------\n')
        for i in user.keys():
            if(user[i][4]<=18.5):
                print(f'{i}的bmi為\n'+str(user[i][4])+'\n這表示您的體重過輕\n')
                print('您可以任意點選我們餐廳的食物\n推薦您我們的招牌鍋貼喔~\n')
            elif(user[i][4]>=18.5 and user[i][4]<24.0):
                print(f'{i}的bmi為:\n'+str(user[i][4])+'\n這表示您的體重正常\n')
                print('您平時的飲食維持得不錯\n我推薦您可以搭配水餃與菜頭湯\n飲養又均衡~\n')
            elif(user[i][4]>=24.0):
                print(f'{i}的bmi為:\n'+str(user[i][4])+'\n這表示您的體重過重\n')
                print('系統不建議您喝紅茶，甜度太高，可以嘗試我們的無糖豆漿喔~\n')
        print('------------------------------------\n')
        
    def diet_kcal_protein():
        print('------------------------------------\n')
        for i in user.keys():
            protein=0
            kcal=0
            #計算蛋白攝取量
            if(int(user[i][0]) < 18):
                protein=(user[i][2] *1.3)
            elif(int(user[i][0]) >= 18 and int(user[i][0]) <= 70):
                protein=(user[i][2] *1.1)
            elif(int(user[i][0]) > 70):
                protein=(user[i][2] *1.2)

            #計算熱量攝取量
            if(user[i][4] <= 18.5 and user[i][3] == 0):
                kcal=(user[i][2] *35)
            elif(user[i][4] <= 18.5 and user[i][3]==1):
                kcal=(user[i][2] *40)
            elif(user[i][4] <= 18.5 and user[i][3]==2):
                kcal=(user[i][2] *45)
            elif(user[i][4] > 18.5 and user[i][4] < 24.0 and user[i][3]==0):
                kcal=(user[i][2] *30)
            elif(user[i][4] >18.5 and user[i][4] <24.0 and user[i][3]==1):
                kcal=(user[i][2] *35)
            elif(user[i][4] > 18.5 and user[i][4] < 24.0 and user[i][3]==2):
                kcal=(user[i][2] *40)
            elif(user[i][4] >= 24.0 and user[i][3]==0):
                kcal=(user[i][2] *22.5)
            elif(user[i][4] >= 24.0 and user[i][3]==1):
                kcal=(user[i][2] *30)
            elif(user[i][4] >= 24.0 and user[i][3]==2):
                kcal=(user[i][2] *35)
            #顯示使用者的每日蛋白質和熱量攝取量
            user_kcal[i]=kcal
            print(f'建議{i}每日應攝取'+str(protein)+'公克的蛋白質，以及'+str(kcal)+'大卡的熱量哦')
            print('------------------------------------\n')
            t=int(input('請問需要提供您每日飲食建議嗎?(1)要/(0)不要'))
            if(t==1):
                print('------------------------------------\n')
                #顯示我的每日飲食建議量
                print('請參考以下\n每日飲食建議量')
                #使用變數，可幫助之後有其他大卡的數據可以直接修正
                Kcal_1200=[1.5,3,1.5,3,2,4]
                Kcal_1500=[2.5,4,1.5,3,2,4]
                Kcal_1800=[3,5,1.5,3,2,5]
                Kcal_2000=[3,6,1.5,4,3.5,6]
                Kcal_2200=[3.5,6,1.5,4,3.5,6]
                Kcal_2500=[4,7,1.5,5,4,7]
                Kcal_2700=[4,8,2,5,4,8]
                diet_tips={1200:Kcal_1200,1500:Kcal_1500,1800:Kcal_1800
                        ,2000:Kcal_2000,2200:Kcal_2200,2500:Kcal_2500,2700:Kcal_2700}
                if(kcal<=1200):
                    i=1200
                elif(kcal>1200 and kcal<=1500):
                    i=1500
                elif(kcal>1500 and kcal<=1800):
                    i=1800
                elif(kcal>1800 and kcal<=2000):
                    i=2000
                elif(kcal>2000 and kcal<=2200):
                    i=2200
                elif(kcal>2200 and kcal<=2500):
                    i=2500
                elif(kcal>2500 and kcal<=2700):
                    i=2700
                print(f'由於我是{kcal}大卡，因此需要:')
                print('全榖雜糧類:'+str(diet_tips[i][0])+'份')
                print('豆魚蛋肉類:'+str(diet_tips[i][1])+'份')
                print('乳品類    :'+str(diet_tips[i][2])+'份')
                print('蔬菜類    :'+str(diet_tips[i][3])+'份')
                print('水果類    :'+str(diet_tips[i][4])+'份')
                print('油脂類    :'+str(diet_tips[i][5])+'份')

                print('-----------------')
                print('以下為每日餐盤建議')
                print('每天早晚一杯奶\n')
                print('每餐水果拳頭大\n')
                print('菜比水果多一點\n')
                print('飯跟蔬菜一樣多\n')
                print('豆魚蛋肉一掌心\n')
                print('堅果種子一茶匙\n')
                print('-----------------')
            print('------------------------------------\n')
    def food():
        print('------------------------------------\n')
        print('以下為我的食物組合:')
        print('請選擇最適合的~')

        print('3餐食物隨機組合:')
        #list與set的使用(並同時做早餐的重新排序)
        list_rice=['鍋貼(餐廳)','水餃(餐廳)']
        set_rice=set(list_rice)
        #測試update
        set_rice.update(['白飯'])
        set_rice.update(['紫米飯'])
        set_rice.update(['五穀雜糧飯'])
        list_rice=list(set_rice)
        #print(list_rice) #測試是否隨機產生(是)

        list_meat=['炒豬肉絲','煎魚','雞肉丁','丁香魚','肉丸','扁食','豆漿(餐廳)']
        set_meat=set(list_meat)
        list_meat=list(set_meat)

        list_milk=['牛奶','羊奶','起司','優格','乳酪蛋糕']
        set_milk=set(list_milk)
        list_milk=list(set_milk)

        list_veg=['炒高麗菜','燙地瓜葉','苦瓜鹹蛋','炒A菜','炒筍子','菜頭湯(餐廳)']
        set_veg=set(list_veg)
        list_veg=list(set_veg)

        list_fruit=['蘋果','西瓜','奇異果','香蕉','蓮霧','水蜜桃']
        set_fruit=set(list_fruit)
        list_fruit=list(set_fruit)

        list_oil=['酪梨','堅果','橄欖油','玄米油']
        set_oil=set(list_oil)
        list_oil=list(set_oil)


        tuple_breakfast=('早餐')
        tuple_lunch=('中餐')
        tuple_dinner=('晚餐')

        dict_meals={}

        dict_meals[tuple_breakfast]=(list_rice[0],list_meat[1],list_milk[2],list_veg[0],list_fruit[1],list_oil[2])
        print('早餐:'+str(dict_meals[tuple_breakfast]))
        setb={list_rice[0],list_meat[1],list_milk[2],list_veg[0],list_fruit[1],list_oil[2]}

        #再次重新排序(中餐)
        set_rice=set(list_rice)
        list_rice=list(set_rice)

        set_meat=set(list_meat)
        list_meat=list(set_meat)

        set_milk=set(list_milk)
        list_milk=list(set_milk)

        set_veg=set(list_veg)
        list_veg=list(set_veg)

        set_fruit=set(list_fruit)
        list_fruit=list(set_fruit)

        set_oil=set(list_oil)
        list_oil=list(set_oil)

        dict_meals[tuple_lunch]=(list_rice[1],list_meat[2],list_milk[0],list_veg[1],list_fruit[2],list_oil[0])
        print('中餐:'+str(dict_meals[tuple_lunch]))
        setl={list_rice[1],list_meat[2],list_milk[0],list_veg[1],list_fruit[2],list_oil[0]}

        #再次重新排序(晚餐)
        set_rice=set(list_rice)
        list_rice=list(set_rice)

        set_meat=set(list_meat)
        list_meat=list(set_meat)

        set_milk=set(list_milk)
        list_milk=list(set_milk)

        set_veg=set(list_veg)
        list_veg=list(set_veg)

        set_fruit=set(list_fruit)
        list_fruit=list(set_fruit)

        set_oil=set(list_oil)
        list_oil=list(set_oil)

        dict_meals[tuple_dinner]=(list_rice[2],list_meat[1],list_milk[0],list_veg[2],list_fruit[1],list_oil[0])
        setd={list_rice[2],list_meat[1],list_milk[0],list_veg[2],list_fruit[1],list_oil[0]}

        print('晚餐:'+str(dict_meals[tuple_dinner]))
        print('早餐與中餐有重複嗎?',setb>=setl)
        print('中餐與晚餐有重複嗎?',setd>=setl)
        print('早餐與晚餐有重複嗎?',setb>=setd)
        print('------------------------------------\n')
    if(test==1):
        print('------------------------------------\n')
        print('(1)輸入自身身體數值，提供餐廳飲食建議')
        print('(2)建議食用蛋白質與熱量建議')
        print('(3)每日三餐健康搭配(隨機)建議')
        diet=int(input('您想執行上述哪一個選項(1 or 2 or 3)'))
        print('------------------------------------\n')
        time.sleep(3)
        os.system("cls")    
        if(diet==1):
            diet_recommand() 
        if(diet==2):
            diet_kcal_protein()
        if(diet==3):
            print('操作此操作前，提醒您~\n熱量建議請操作2獲得每日熱量建議喔~')
            food()
        time.sleep(3)
        os.system("cls")  
print('------------------------------------\n')
result=0
calories = {'鍋貼':630, '水餃':500,'菜頭湯':122,'紅茶':111,'豆漿':188,'套餐1':741,'套餐2':611}
#新增套餐(list+dict應用)
m_set1=[70,'鍋貼','紅茶']
m_set2=[80,'水餃','紅茶']
menu={'鍋貼':50,'水餃':60,'菜頭湯':35,'紅茶':25,'豆漿':25,'套餐1':m_set1,'套餐2':m_set2}
order={'鍋貼':0,'水餃':0,'菜頭湯':0,'紅茶':0,'豆漿':0,'套餐1':0,'套餐2':0}
#使用者訂餐(while迴圈測試)
while(test):
    print('好的~以下是我們的菜單\n')
    
    #dict的for 迴圈
    for m in menu.items():
        print(m)
    choose=input('請問您想選擇?(請輸入菜名(或套餐名))')
    t=True
    #while進行偵錯是否輸入錯誤
    while(not(choose =='鍋貼' or  choose =='水餃' or choose =='菜頭湯' or choose =='紅茶' or choose =='豆漿'or choose =='套餐1'or choose =='套餐2')):
        print('輸入錯誤請重新輸入\n') #使用者輸入錯誤例外處理
        choose=input('請問您想選擇?(請輸入菜名(或套餐名))\n')
    q=int(input('請問要幾份?'))
    order[choose]=int(order[choose])+q
    result=result+(calories[choose]*q)
    print(f'提示您目前的熱量為{result}\n如果您有於飲食健康生活中測試過熱量\n可以參考是否要繼續點餐')
    print('請問您還要繼續點嗎?\n')
    keep=int(input('要(1)/不要(2)'))
    #if判斷點餐是否繼續
    if(keep==2):
        test=False
print('------------------------------------\n')
time.sleep(3)
os.system("cls")
#使用者訂餐結果與金額
print('------------------------------------\n')
print('以下是您的訂餐內容\n')
#dict的for 迴圈
for o in order.keys():
    #if判斷
    if(order[o]>0):
        print(o+":"+str(order[o])+"份\n")
print('\n以下是您的訂餐總金額\n')
total=0
sum={'鍋貼':0,'水餃':0,'菜頭湯':0,'紅茶':0,'豆漿':0,'套餐1':0,'套餐2':0}
#dict的for 迴圈
for o in order.keys():
    #if判斷
    if(o!='套餐1' and o!='套餐2' and int(order[o])>0):
        sum[o]=int(order[o])*int(menu[o])
    #新增套餐(list+dict應用) & elif判斷
    elif((o=='套餐1' or o=='套餐2') and int(order[o])>0):
        sum[o]=int(order[o])*int(menu[o][0])
for s in sum.values():
    total=int(total)+int(s)
print(str(total)+'元')
#使用者支付頁面與判斷(有錯誤例外處理)
pay=int(input('請付款，請輸入付款金額:\n'))
while(pay<total):
    print('付款不足!\n')
    pay=int(input('請付款，請重新輸入付款金額:\n'))
if(pay>total):
    print('找您'+pay-total+'元，謝謝您!\n')
if(pay==total):
    print('整付，謝謝您~\n')
    
now = datetime.datetime.now()
print('最後確認您的用餐時間為(現在時間):'+now.strftime("%Y-%m-%d %H:%M:%S")+'後的兩小時喔~\n')

print('------------------------------------\n')
time.sleep(3)
os.system("cls")

after_order()
time.sleep(3)
os.system("cls")

back_pic()
time.sleep(3)
os.system("cls")

#模擬服務人員(劃位分析
print('------------------------------------\n')
print('模擬服務人員\n')
employee1=['店長','09123456789','女','到']
employee2=['店員','09987654321','男','未到']
employee={'1':employee1,'2':employee2}
employee_num=2
store_test=int(input('請輸入您要執行的操作:桌位管理(1)/員工管理(2)/員工簽到(3)'))
print('------------------------------------\n')
time.sleep(3)
os.system("cls")
print('------------------------------------\n')
#桌位管理
if(store_test==1):
    print('訂位人數有:'+str(people_num)+'\n')
    print('如果想要都是兩人桌的話會需要\n'+str(people_num//2)+'但可能有'+str(people_num%2)+'人沒位子~\n\n')
    print('如果想要都是三人桌的話會需要\n'+str(people_num//3)+'但可能有'+str(people_num%3)+'人沒位子~\n\n')
    table={'兩人桌':2,'三人桌':3}
    print('您可以參考目前剩餘桌位排桌位~\n')
    for t in table.keys():
        print('目前有:'+t+'剩餘:'+str(table[t])+'\n')
    print('謝謝您使用本系統~\n')
#員工管理
elif(store_test==2):
    print('員工資料:\n')
    for e in employee.keys():
        print(e+'號')
        print(employee[e])
    e_test=int(input('請輸入:無操作(0)/新增員工(1)/刪除員工(2)/修改員工資料(3)'))
    #員工新增
    if(e_test==1):
        name=input('姓名:')
        tel=input('電話')
        gender=input('性別(男|女)')
        list_add=[name,tel,gender,'未到']
        employee[str(employee_num+1)]=list_add
        print('已新增')
        print('員工資料:\n')
        for e in employee.keys():
            print(e+'號')
            print(employee[e])
    #員工刪除
    elif(e_test==2):
        print('請問要刪除幾號的資料?\n')
        e_num=int(input())
        del employee[str(e_num)]
        print('已刪除')
        print('員工資料:\n')
        for e in employee.keys():
            print(e+'號')
            print(employee[e])
    #員工修改資料
    elif(e_test==3):
        print('請問要修改幾號的資料?\n')
        e_num=int(input())
        name=input('姓名:')
        tel=input('電話')
        gender=input('性別(男|女)')
        list_change=[name,tel,gender,'未到']
        employee[str(e_num)]=list_change
        print('已修改')
        print('員工資料:\n')
        for e in employee.keys():
            print(e+'號')
            print(employee[e])
#員工簽到
elif(store_test==3):
    print('員工資料:\n')
    for e in employee.keys():
        print(e+'號')
        print(employee[e])
    print('請問要簽到幾號的資料?\n')
    e_num=int(input())
    employee[str(e_num)][3]='到'
    print('已簽到')
    ontime()
print('------------------------------------\n')
time.sleep(3)
os.system("cls")